version: 2.1

orbs:
  win: circleci/windows@5.0.0

jobs:
  unit-tests:
    executor:
      name: win/server-2022
      shell: bash.exe
    working_directory: C:\Users\circleci\project\PrimeService.Tests
    steps:
      - checkout:
          path: C:\Users\circleci\project
      - restore_cache:
          keys:
            - dotnet-packages-v1-{{ checksum "PrimeService.Tests.csproj" }}
      - run:
          name: Generate list of tests
          command: |
            # This generates a list of tests and saves to a file
            dotnet test -t --nologo > list-of-tests.txt
            # This cuts out the crud and formats the list of tests
            echo Scraping the list of tests
            sed -e '1,/The following Tests are available:/d' -e 's/^[[:space:]]\{1,\}//g' list-of-tests.txt | tee pool.txt
            echo
            echo Passing through '`circleci tests`' and reformatting
            circleci tests split --split-by timings --timings-type testname <pool.txt | tee tests-to-run.txt
            echo
            echo Running the worlds most complex sed commands
            sed -e 's/^/DisplayName=\"/;$ ! s/$/\"|/' tests-to-run.txt | tr -d '\r\n' | tee filtered-test-list-1.txt
            # had to separate the bracket escaping here. Tee will work when SSHed onto the executor \o/ but not
            sed -e 's/[(]/\\(/g;s/[)]/\\)/g' filtered-test-list-1.txt > filtered-test-list-2.txt
            cat filtered-test-list-2.txt

      - run:
          name: Run tests and save output
          command: |
            TEST=$(cat filtered-test-list.txt)
            # Struggling here as my list needs to be surrounded by single quotes which is hard to do in bash
            # dotnet test --filter $TEST --logger:"trx;LogFilePrefix=testResults"
            dotnet test --filter 'DisplayName="Prime.UnitTests.Services.PrimeService_IsPrimeShould.IsPrime_NonPrimesLessThan10_ReturnFalse\(value: 4\)"|DisplayName="Prime.UnitTests.Services.PrimeService_IsPrimeShould.IsPrime_NonPrimesLessThan10_ReturnFalse\(value: 6\)"' --logger:"trx;LogFilePrefix=testResults"
      - save_cache:
          paths: 
            - ./
          key: dotnet-packages-v1-{{ checksum "PrimeService.Tests.csproj" }}
      - run:
          name: install trx2junit and convert test results to junit
          command: |
            dotnet tool install -g trx2junit
            cd $TEST_PATH
            /c/Users/circleci/.dotnet/tools/trx2junit.exe TestResults/*
      - store_test_results:
          path: $TEST_PATH/TestResults
      - store_artifacts:
          path: $TEST_PATH/TestResults
 
workflows:
  integration-tests:
    jobs:
      - unit-tests